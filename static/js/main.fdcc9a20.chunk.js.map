{"version":3,"sources":["common/AppContext.tsx","common/utils/commonUtils.ts","components/common/LeftMenu/LeftMenu.tsx","components/common/AppPageContext.tsx","components/common/Header/Header.tsx","common/axios/index.ts","components/common/Error/Error.tsx","components/common/AuthLayout.tsx","components/common/AppPage.tsx","components/routes/Private/UserOnline.tsx","components/Dashboard/ForKids/audio/Audios.ts","common/ripple/RippleLayer.js","common/ripple/Ripple.js","components/Dashboard/ForKids/ForKids.tsx","components/Dashboard/Crocodile/Crocodile.tsx","components/App.tsx","common/localization/index.ts","common/localization/lang/en.ts","common/localization/lang/ru.ts","state/filter/actionTypes.ts","state/filter/reducer.ts","state/rootReducers/index.ts","common/store/index.ts","index.tsx"],"names":["createContext","theme","setTheme","t","isTouch","window","navigator","maxTouchPoints","msMaxTouchPoints","isSafari","screen","width","height","test","userAgent","includes","LeftMenu","intl","useIntl","curPath","useLocation","pathname","useState","visible","setVisible","history","useHistory","navModulesList","navId","label","formatMessage","id","defaultMessage","path","onClose","onToggle","onClick","push","onMouseDown","onTouchStart","className","icon","menuOutline","title","placement","closeIcon","closeOutline","bodyStyle","padding","display","flexDirection","map","isActiveMenuItem","startsWith","clsx","Header","useContext","AppContext","moduleHeader","AppPageContext","HeaderLayout","checked","onChange","axios","create","baseURL","process","Error","useModal","modal","body","useEffect","openErrorModalWithIcon","message","error","centered","content","requestInterceptor","interceptors","request","use","Promise","reject","responseInterceptor","response","status","statusText","data","eject","AuthLayout","children","appContainer","useRef","Provider","value","ref","AppPage","pageProps","UserOnline","Component","component","rest","render","props","Audios","Audio","play","sound","Object","keys","forEach","audio","currentTime","pause","RippleLayer","state","animate","top","left","ripple","React","createRef","px","val","getStyles","getRepplingCls","reppling","cursorPos","$button","current","parentElement","buttonPos","getBoundingClientRect","buttonWidth","offsetWidth","buttonHeight","offsetHeight","rippleWidthShouldBe","Math","max","centerize","setState","prevProps","this","time","style","defaultProps","Ripple","handleClick","e","disabled","touches","clientY","clientX","Date","now","reactSwipeEl","interval","fruits","ForKids","autoplay","setAutoplay","setTimeout","next","setInterval","clearInterval","swipeOptions","continuous","el","description","src","prev","Crocodile","App","exact","to","localization","en","apps","Modules","forkids","crocodile","banana","strawberry","kiwi","peach","orange","pear","lemon","plum","apple","pineapple","cherry","pomegranate","ru","SELECT_APPLICATION","initialState","currentApplication","undefined","reducer","action","type","types","payload","appReducers","combineReducers","filter","filterReducer","rootReducers","middlewares","thunk","store","createStore","composeWithDevTools","applyMiddleware","useSelector","ReactDOM","messages","locale","document","getElementById"],"mappings":"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","file":"static/js/main.fdcc9a20.chunk.js","sourcesContent":["import { createContext, Dispatch, SetStateAction } from 'react';\r\n\r\ninterface ThemeProps {\r\n  theme: 'light' | 'dark';\r\n  setTheme: Dispatch<SetStateAction<'light' | 'dark'>>\r\n}\r\n\r\nexport default createContext({\r\n  theme: 'light',\r\n  setTheme: (t) => t,\r\n} as ThemeProps);\r\n","import { isEqual, mergeWith, toLower, trim } from 'lodash';\r\n\r\nexport const isDev = (): boolean => !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\r\nexport const compareByParams = <T>(a: T, b: T, param: keyof T): number => (a[param] > b[param] ? 1 : -1);\r\nexport const compareByDate = (a: Date | string, b: Date | string): number => new Date(b).getTime() - new Date(a).getTime();\r\nexport const compareIgnoringCase = (a: string, b: string): number => (a.toLowerCase() > b.toLowerCase() ? 1 : -1);\r\n\r\nexport const deepCompareObj = <T extends CommonObj, U extends CommonObj>(oldObj: T, newObj: U): CommonObj => {\r\n  const updatedObj: CommonObj = {};\r\n  mergeWith(oldObj, newObj, (objectValue, sourceValue, key) => {\r\n    if (!(isEqual(objectValue, sourceValue)) && (Object(objectValue) !== objectValue)) {\r\n      updatedObj[key] = sourceValue;\r\n    }\r\n  });\r\n  return updatedObj;\r\n};\r\n\r\nexport const getFirstCharacterFromString = (val: string): string => val.charAt(0).toUpperCase();\r\n\r\nexport const normalizeStrForSearch = (val: string): string => trim((toLower(val)));\r\n\r\nexport const isTouchDevice = () => (('ontouchstart' in window)\r\n  || (navigator.maxTouchPoints > 0)\r\n  // @ts-ignore\r\n  || (navigator.msMaxTouchPoints > 0));\r\n\r\nexport const isTouch = isTouchDevice();\r\n\r\nexport const isMobile = window.screen.width < 768 || window.screen.height < 768;\r\nexport const isPortrait = () => window.orientation === 0;\r\n\r\nexport const isSafari = /Safari\\//.test(navigator.userAgent) && !/(Chrome\\/|Android\\s)/.test(navigator.userAgent);\r\nexport const isSafariMacintosh = isSafari && navigator.userAgent.includes('Macintosh');\r\nexport const isSafariIPhone = isSafari && navigator.userAgent.includes('iPhone');\r\n","import { FC, useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport { Drawer } from 'antd';\r\nimport { Icon } from '@iconify/react';\r\nimport closeOutline from '@iconify-icons/eva/close-outline';\r\nimport menuOutline from '@iconify-icons/eva/menu-outline';\r\nimport { isTouch } from '../../../common/utils/commonUtils';\r\n\r\nconst LeftMenu: FC = (): JSX.Element => {\r\n  const intl = useIntl();\r\n  const { pathname: curPath } = useLocation();\r\n  const [visible, setVisible] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const navModulesList: NavModulesList[] = [\r\n    {\r\n      navId: 0,\r\n      label: intl.formatMessage({ id: 'forkids', defaultMessage: 'For Kids' }),\r\n      path: '/forkids',\r\n    },\r\n    {\r\n      navId: 1,\r\n      label: intl.formatMessage({ id: 'crocodile', defaultMessage: 'Crocodile' }),\r\n      path: '/crocodile',\r\n    },\r\n  ];\r\n\r\n  const onClose = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const onToggle = () => {\r\n    setVisible(!visible);\r\n  };\r\n\r\n  const onClick = (path: string) => {\r\n    history.push(path);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div onMouseDown={isTouch ? () => {} : onToggle} onTouchStart={onToggle} className=\"menu-button cursor-pointer select-none\">\r\n        <Icon icon={menuOutline} width={32} height={32}/>\r\n      </div>\r\n      <Drawer\r\n        className=\"left-menu\"\r\n        title={(\r\n          <span\r\n            className=\"text-xl text-black font-bold\"\r\n          >\r\n            <FormattedMessage\r\n              id=\"Modules\"\r\n              defaultMessage=\"Modules\"\r\n            />\r\n            <sup> ©</sup>\r\n\r\n          </span>\r\n        )}\r\n        placement=\"left\"\r\n        onClose={onClose}\r\n        visible={visible}\r\n        closeIcon={<Icon icon={closeOutline} width={22} height={22}/>}\r\n        bodyStyle={{\r\n          padding: 0,\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n        }}\r\n        width={320}\r\n      >\r\n        {\r\n          navModulesList.map(({ navId, label, path }) => {\r\n            const isActiveMenuItem = curPath.startsWith(path) || (curPath === '/' && navId === 0);\r\n            return (\r\n              <div key={navId} className=\"cursor-pointer\">\r\n                <div className={clsx('text-base menu-item', isActiveMenuItem && 'active')}\r\n                     onMouseDown={isTouch ? () => {} : () => onClick(path)}\r\n                     onTouchStart={() => onClick(path)}\r\n                >\r\n                  {label}\r\n                </div>\r\n              </div>\r\n            );\r\n          })\r\n        }\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LeftMenu;\r\n","import { createContext } from 'react';\r\n\r\nexport default createContext({\r\n  title: '',\r\n});\r\n","import { FC, useContext } from 'react';\r\nimport clsx from 'clsx';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { Layout, Switch } from 'antd';\r\nimport LeftMenu from 'components/common/LeftMenu';\r\nimport AppContext from 'common/AppContext';\r\nimport AppPageContext from 'components/common/AppPageContext';\r\n\r\nconst Header: FC = (): JSX.Element => {\r\n  const { theme, setTheme } = useContext(AppContext);\r\n  const { title: moduleHeader } = useContext(AppPageContext);\r\n\r\n  const { Header: HeaderLayout } = Layout;\r\n\r\n  const change = () => {\r\n    setTheme((t: 'light' | 'dark'): 'light' | 'dark' => (t === 'light' ? 'dark' : 'light'));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HeaderLayout className=\"shadow-lg flex items-center\">\r\n        {<LeftMenu/>}\r\n        <div className={clsx('flex flex-col pt-10 pb-10')}>\r\n            <span className={clsx('text-sm')}>\r\n              <FormattedMessage\r\n                id=\"apps\"\r\n                defaultMessage=\"🌈 Rainbow apps\"\r\n              />\r\n            </span>\r\n          <span className=\"text-lg font-bold leading-10\">{moduleHeader}</span>\r\n        </div>\r\n        <div className=\"flex items-center hidden\">\r\n            <span\r\n              className={clsx('pr-14 t text-white opacity-75 hover:opacity-100',\r\n                'cursor-pointer transition duration-300 font-light')}\r\n            >\r\n              Dark theme\r\n            </span>\r\n          <Switch checked={theme === 'dark'} onChange={change}/>\r\n        </div>\r\n      </HeaderLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({ baseURL: `${process.env.PUBLIC_URL}` });\r\n","import { FC, useEffect } from 'react';\r\nimport axios from 'common/axios';\r\nimport { Modal } from 'antd';\r\nimport {\r\n  AxiosError, AxiosResponse, AxiosRequestConfig,\r\n} from 'axios';\r\nimport { ModalFuncProps } from 'antd/lib/modal/Modal';\r\n\r\nconst Error: FC = (): JSX.Element => {\r\n  const [modal, body] = Modal.useModal();\r\n\r\n  useEffect(() => {\r\n    const config = (content: string): ModalFuncProps => ({\r\n      title: 'Error',\r\n      centered: true,\r\n      content,\r\n    });\r\n\r\n    const openErrorModalWithIcon = (message: string) => {\r\n      modal.error(config(message));\r\n    };\r\n\r\n    const requestInterceptor = axios.interceptors.request.use(\r\n      (request: AxiosRequestConfig): AxiosRequestConfig => request,\r\n      (error: AxiosError): Promise<AxiosError> => Promise.reject(error),\r\n    );\r\n\r\n    const responseInterceptor = axios.interceptors.response.use(\r\n      (response: AxiosResponse): AxiosResponse => response,\r\n      (error: AxiosError): Promise<AxiosError> => {\r\n        if (error.response) {\r\n          const { status, statusText, data } = error.response;\r\n\r\n          if (status >= 500) {\r\n            if (typeof data === 'string') {\r\n              openErrorModalWithIcon(data);\r\n            } else {\r\n              openErrorModalWithIcon(`Invalid HTTP response status ${status} (${statusText})`);\r\n            }\r\n          }\r\n        }\r\n\r\n        return Promise.reject(error);\r\n      },\r\n    );\r\n\r\n    return () => {\r\n      axios.interceptors.request.eject(requestInterceptor);\r\n      axios.interceptors.response.eject(responseInterceptor);\r\n    };\r\n  }, [modal]);\r\n\r\n  return body;\r\n};\r\n\r\nexport default Error;\r\n","import { FC, useRef, useState } from 'react';\r\nimport AppContext from 'common/AppContext';\r\nimport Header from 'components/common/Header';\r\nimport Error from 'components/common/Error';\r\n\r\nconst AuthLayout: FC = ({ children }): JSX.Element => {\r\n  const [theme, setTheme] = useState<'light' | 'dark'>('light');\r\n  const appContainer = useRef<HTMLDivElement | null>(null);\r\n\r\n  return (\r\n    <AppContext.Provider value={{ theme, setTheme }}>\r\n      <div className={`theme-${theme} absolute inset-0 overflow-hidden`} ref={appContainer}>\r\n        <div className=\"absolute inset-0 overflow-hidden flex flex-col bg-ivory transition duration-300\">\r\n          <Header/>\r\n\r\n          {children}\r\n\r\n          <Error/>\r\n        </div>\r\n      </div>\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthLayout;\r\n","import { FC } from 'react';\r\nimport AuthLayout from 'components/common/AuthLayout';\r\nimport AppPageContext from 'components/common/AppPageContext';\r\n\r\nexport interface Props {\r\n  pageProps?: PageProps;\r\n}\r\n\r\nconst AppPage: FC<Props> = ({ pageProps = { title: '' }, children }): JSX.Element | null => (\r\n  <AppPageContext.Provider value={pageProps}>\r\n    <AuthLayout>\r\n      {children}\r\n    </AuthLayout>\r\n  </AppPageContext.Provider>\r\n);\r\n\r\nexport default AppPage;\r\n","import { FC } from 'react';\r\nimport { Route, RouteProps } from 'react-router-dom';\r\nimport AppPage from 'components/common/AppPage';\r\n\r\ninterface Props extends RouteProps {\r\n  pageProps?: PageProps\r\n}\r\n\r\nconst UserOnline: FC<Props> = ({\r\n  component: Component, children, pageProps, ...rest\r\n}) => {\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        <AppPage pageProps={pageProps}>\r\n          {Component ? <Component {...props} /> : children}\r\n        </AppPage>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default UserOnline;\r\n","export const Audios: { [key: string]: HTMLAudioElement } = {\r\n  'tap': new Audio(process.env.PUBLIC_URL + '/audio/click/click.mp3'),\r\n};\r\n\r\nexport const play = (sound: string) => {\r\n  Object.keys(Audios).forEach((audio) => {\r\n    if (Audios[audio].currentTime > 0) {\r\n      Audios[audio].pause();\r\n      Audios[audio].currentTime = 0;\r\n    }\r\n  });\r\n  void Audios[sound].play();\r\n};\r\n","/* eslint-disable */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './RippleLayer.css';\r\n\r\nclass RippleLayer extends React.Component {\r\n  static propTypes = {\r\n    cursorPos: PropTypes.shape({\r\n      top: PropTypes.number,\r\n      left: PropTypes.number,\r\n      time: PropTypes.number,\r\n    }),\r\n  };\r\n\r\n  static defaultProps = {\r\n    cursorPos: {},\r\n  };\r\n\r\n  state = {\r\n    animate: false,\r\n    width: 0,\r\n    height: 0,\r\n    top: 0,\r\n    left: 0,\r\n  };\r\n\r\n  ripple = React.createRef();\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const cursorPos = this.props.cursorPos;\r\n\r\n    // Prevent Component duplicates do ripple effect at the same time\r\n    if (cursorPos.time !== prevProps.cursorPos.time) {\r\n      // If Has Animated, set state to \"false\" First\r\n      if (!this.state.animate) {\r\n        this.reppling(cursorPos);\r\n        return;\r\n      }\r\n\r\n      // do rippling\r\n      this.setState({ animate: false }, () => this.reppling(cursorPos));\r\n    }\r\n  }\r\n\r\n  px = val => `${val}px`;\r\n\r\n  getStyles = () => {\r\n    const { top, left, width, height } = this.state;\r\n\r\n    return {\r\n      top: this.px(top),\r\n      left: this.px(left),\r\n      width: this.px(width),\r\n      height: this.px(height),\r\n    };\r\n  };\r\n\r\n  getRepplingCls = () => {\r\n    return this.state.animate ? 'is-reppling' : '';\r\n  };\r\n\r\n  reppling = cursorPos => {\r\n    // Get the element\r\n    const $ripple = this.ripple.current;\r\n    const $button = $ripple.parentElement;\r\n\r\n    const buttonPos = $button.getBoundingClientRect();\r\n\r\n    const buttonWidth = $button.offsetWidth;\r\n    const buttonHeight = $button.offsetHeight;\r\n\r\n    // Make a Square Ripple\r\n    const rippleWidthShouldBe = Math.max(buttonHeight, buttonWidth);\r\n\r\n    // Make Ripple Position to be center\r\n    const centerize = rippleWidthShouldBe / 2;\r\n\r\n    this.setState({\r\n      animate: true,\r\n      width: rippleWidthShouldBe,\r\n      height: rippleWidthShouldBe,\r\n      top: cursorPos.top - buttonPos.top - centerize,\r\n      left: cursorPos.left - buttonPos.left - centerize,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return <div\r\n      className={`Ripple ${this.getRepplingCls()}`}\r\n      ref={this.ripple}\r\n      style={this.getStyles()}/>;\r\n  }\r\n}\r\n\r\nexport default RippleLayer;\r\n","/* eslint-disable */\r\nimport React, { Component } from 'react';\r\nimport RippleLayer from './RippleLayer';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nclass Ripple extends Component {\r\n  static propTypes = {\r\n    ExtComponent: PropTypes.node,\r\n    className: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    disabled: false,\r\n  };\r\n\r\n  state = {\r\n    cursorPos: {},\r\n  };\r\n\r\n  handleClick = e => {\r\n    if (!this.props.disabled && e.touches) {\r\n      const cursorPos = {\r\n        top: e.touches[0].clientY,\r\n        left: e.touches[0].clientX,\r\n        time: Date.now(),\r\n      };\r\n\r\n      this.setState({ cursorPos });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { children, className } = this.props;\r\n\r\n    return (\r\n      <div\r\n        {...this.props}\r\n        className={clsx('relative overflow-hidden flex-1 flex', className)}\r\n        onTouchStart={this.handleClick}\r\n      >\r\n        {children}\r\n        <RippleLayer cursorPos={this.state.cursorPos}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Ripple;\r\n","import { FC, useEffect, useState } from 'react';\r\nimport ReactSwipe from 'react-swipe';\r\n\r\nimport './ForKids.scss';\r\nimport { useIntl } from 'react-intl';\r\nimport { Icon } from '@iconify/react';\r\nimport { play } from './audio/Audios';\r\nimport Ripple from '../../../common/ripple/Ripple';\r\nimport { isTouch } from '../../../common/utils/commonUtils';\r\n\r\nconst fruits = [\r\n  'banana',\r\n  'strawberry',\r\n  'kiwi',\r\n  'peach',\r\n  'orange',\r\n  'pear',\r\n  'lemon',\r\n  'plum',\r\n  'apple',\r\n  'pineapple',\r\n  'cherry',\r\n  'pomegranate',\r\n];\r\n\r\nlet reactSwipeEl: ReactSwipe;\r\nlet interval: NodeJS.Timer;\r\n\r\nconst ForKids: FC = (): JSX.Element => {\r\n\r\n  const intl = useIntl();\r\n\r\n  const [autoplay, setAutoplay] = useState<boolean>(true);\r\n\r\n\r\n  useEffect(() => {\r\n    if (autoplay) {\r\n      setTimeout(() => {\r\n        reactSwipeEl.next();\r\n      }, 1000);\r\n      interval = setInterval(() => {\r\n        reactSwipeEl.next();\r\n      }, 3000);\r\n    } else {\r\n      clearInterval(interval);\r\n    }\r\n  }, [autoplay]);\r\n\r\n  return (\r\n    <div className='p-10'>\r\n      <div>\r\n        <ReactSwipe\r\n          className={'carousel'}\r\n          swipeOptions={{ continuous: true }}\r\n          ref={(el: ReactSwipe) => {\r\n            reactSwipeEl = el;\r\n          }}\r\n\r\n        >\r\n          {fruits.map((description) => {\r\n            return (<div key={description}\r\n                         onMouseDown={\r\n                           isTouch ? () => {\r\n                           } : () => {\r\n                             setAutoplay(false);\r\n                           }}\r\n                         onTouchStart={() => {\r\n                           setAutoplay(false);\r\n                         }}>\r\n              <div className={'item flex flex-col'}>\r\n                <div className={'description'}>\r\n                  {intl.formatMessage({ id: description })}\r\n                </div>\r\n                <img className={'image'} src={process.env.PUBLIC_URL + '/images/fruits/' + description + '.jpg'}/>\r\n              </div>\r\n            </div>);\r\n          })}\r\n        </ReactSwipe>\r\n        <div className={'carousel-buttons flex flex-row justify-between'}>\r\n\r\n          <div className={'carousel-button'}\r\n               onMouseDown={\r\n                 isTouch ? () => {\r\n                 } : () => {\r\n                   setAutoplay(false);\r\n                   reactSwipeEl.prev();\r\n                   play('tap');\r\n                 }}\r\n               onTouchStart={() => {\r\n                 setAutoplay(false);\r\n                 reactSwipeEl.prev();\r\n                 play('tap');\r\n               }\r\n               }>\r\n            <\r\n              Ripple\r\n              className='carousel-button-ripple'>\r\n              < Icon\r\n                icon=\"clarity:rewind-solid\"\r\n                className={'icon'}\r\n              />\r\n            </Ripple>\r\n          </div>\r\n\r\n          <div className={'carousel-button'}\r\n               onMouseDown={\r\n                 isTouch ? () => {\r\n                 } : () => {\r\n                   setAutoplay(!autoplay);\r\n                   play('tap');\r\n                 }}\r\n               onTouchStart={() => {\r\n                 setAutoplay(!autoplay);\r\n                 play('tap');\r\n               }}>\r\n            <Ripple className='carousel-button-ripple'>\r\n              {autoplay ?\r\n                <Icon icon=\"clarity:pause-solid\" className={'icon'}/>\r\n                : <Icon icon=\"clarity:play-solid\" className={'icon'}/>\r\n              }\r\n            </Ripple>\r\n          </div>\r\n\r\n          <div className={'carousel-button'}\r\n               onMouseDown={\r\n                 isTouch ? () => {\r\n                 } : () => {\r\n                   setAutoplay(false);\r\n                   reactSwipeEl.next();\r\n                   play('tap');\r\n                 }}\r\n               onTouchStart={() => {\r\n                 setAutoplay(false);\r\n                 reactSwipeEl.next();\r\n                 play('tap');\r\n               }}>\r\n            <Ripple className='carousel-button-ripple'>\r\n              <Icon icon=\"clarity:fast-forward-solid\" className={'icon'}/>\r\n            </Ripple>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n  ;\r\n};\r\n\r\nexport default ForKids;\r\n","import { FC } from 'react';\r\n\r\nimport './Crocodile.scss';\r\n\r\nconst Crocodile: FC = (): JSX.Element => {\r\n\r\n  return (\r\n    <div className={'p-20'}>\r\n      Crocodile\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Crocodile;\r\n","import { FC } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport UserOnline from './routes/Private/UserOnline';\r\nimport ForKids from './Dashboard/ForKids/ForKids';\r\nimport Crocodile from './Dashboard/Crocodile/Crocodile';\r\nimport { useIntl } from 'react-intl';\r\n\r\nconst App: FC = (): JSX.Element => {\r\n  const intl = useIntl();\r\n\r\n  return (\r\n        <Switch>\r\n            <UserOnline exact path=\"/\">\r\n                <Redirect to=\"/forkids\"/>\r\n            </UserOnline>\r\n            <UserOnline path=\"/forkids\" component={ForKids}\r\n                        pageProps={{ title: intl.formatMessage({ id: 'forkids', defaultMessage: 'For Kids' }) }}/>\r\n            <UserOnline path=\"/crocodile\" component={Crocodile}\r\n                        pageProps={{ title: intl.formatMessage({ id: 'crocodile', defaultMessage: 'Crocodile' }) }}/>\r\n\r\n            {/*MUST BE THE LAST ROUTE*/}\r\n            <Route exact path=\"*\">\r\n                <Redirect to=\"/forkids\"/>\r\n            </Route>\r\n        </Switch>\r\n  );\r\n};\r\nexport default App;\r\n","import enLang from './lang/en';\nimport ruLang from './lang/ru';\n\nconst localization = {\n  en: enLang,\n  ru: ruLang,\n};\n\nexport default localization;\n","const en = {\n  apps: '🌈 Rainbow apps',\n  Modules: 'Modules',\n  forkids: 'For Kids',\n  crocodile: 'Crocodile',\n\n  banana:      'Banana',\n  strawberry:  'Strawberry',\n  kiwi:        'Kiwi',\n  peach:       'Peach',\n  orange:      'Orange',\n  pear:        'Pear',\n  lemon:       'Lemon',\n  plum:        'Plum',\n  apple:       'Apple',\n  pineapple:   'Pineapple',\n  cherry:      'Cherry',\n  pomegranate: 'Pomegranate',\n};\n\nexport default en;\n","const en = {\n  apps:      '🌈 Радужные программы',\n  Modules:   'Программы',\n  forkids:   'Для детей',\n  crocodile: 'Крокодил',\n\n  banana:      'БАНАН',\n  strawberry:  'КЛУБНИКА',\n  kiwi:        'КИВИ',\n  peach:       'ПЕРСИК',\n  orange:      'АПЕЛЬСИН',\n  pear:        'ГРУША',\n  lemon:       'ЛИМОН',\n  plum:        'СЛИВА',\n  apple:       'ЯБЛОКО',\n  pineapple:   'АНАНАС',\n  cherry:      'ВИШНЯ',\n  pomegranate: 'ГРАНАТ',\n};\n\nexport default en;\n","export const SELECT_APPLICATION = 'root/SELECT_APPLICATION';\r\n","import * as types from 'state/filter/actionTypes';\r\nimport { ActionsTypes } from 'state/filter/actions';\r\n\r\nexport interface FilterState {\r\n  currentApplication: string | undefined;\r\n}\r\n\r\nconst initialState: FilterState = {\r\n  currentApplication: undefined,\r\n};\r\n\r\nconst reducer = (state = initialState, action: ActionsTypes): FilterState => {\r\n  switch (action.type) {\r\n    case types.SELECT_APPLICATION:\r\n      return { ...state, currentApplication: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport filterReducer from '../filter/reducer';\r\nimport { SelectApplication } from '../filter/actions';\r\n\r\n\r\nconst appReducers = combineReducers({\r\n  filter: filterReducer,\r\n});\r\n\r\nconst rootReducers = (state: ReturnType<typeof appReducers> | undefined, action: SelectApplication) => {\r\n  return appReducers(state, action);\r\n};\r\n\r\nexport default rootReducers;\r\n","import { createStore, applyMiddleware, Middleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducers from 'state/rootReducers';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\n\r\nconst middlewares: Middleware[] = [thunk];\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  // Logger for Redux\r\n  // const { createLogger } = require('redux-logger');\r\n  // const logger: Middleware = createLogger({ collapsed: true });\r\n  // middleware.push(logger);\r\n}\r\n\r\nconst store = createStore(rootReducers, composeWithDevTools(applyMiddleware(...middlewares)));\r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\nexport type AppDispatch = typeof store.dispatch;\r\n/** Application specific strongly typed wrapper around redux's useSelector() and useDispatch() */\r\nexport const useAppDispatch = () => useDispatch<any>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n\r\nexport default store;\r\n","import ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { IntlProvider } from 'react-intl';\r\nimport App from 'components/App';\r\nimport localization from 'common/localization';\r\nimport store from 'common/store';\r\n\r\nimport 'styles/main.scss';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <IntlProvider messages={localization.ru} locale=\"ru\">\r\n      {/*use HashRouter for GutHub Pages routing works only for exact match for url, any subdomains will result in 404*/}\r\n      <HashRouter>\r\n        <App/>\r\n      </HashRouter>\r\n    </IntlProvider>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}