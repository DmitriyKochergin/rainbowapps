{"version":3,"sources":["components/Dashboard/ForKids/common/AudiosCache.ts","common/AppContext.tsx","common/utils/commonUtils.ts","components/common/LeftMenu/LeftMenu.tsx","components/common/AppPageContext.tsx","components/common/Header/Header.tsx","common/axios/index.ts","components/common/Error/Error.tsx","components/common/AuthLayout.tsx","components/common/AppPage.tsx","components/routes/Private/UserOnline.tsx","common/ripple/RippleLayer.js","common/ripple/Ripple.js","components/Dashboard/ForKids/common/CardSets.ts","common/GooeyButton/GooeyButton.tsx","components/Dashboard/ForKids/ForKids.tsx","components/Dashboard/Crocodile/Crocodile.tsx","components/App.tsx","common/localization/index.ts","common/localization/lang/en.ts","common/localization/lang/ru.ts","state/filter/actionTypes.ts","state/filter/reducer.ts","state/rootReducers/index.ts","common/store/index.ts","index.tsx"],"names":["timeoutObject","createContext","theme","setTheme","t","isTouch","window","navigator","maxTouchPoints","msMaxTouchPoints","isSafari","screen","width","height","test","userAgent","includes","LeftMenu","intl","useIntl","curPath","useLocation","pathname","useState","visible","setVisible","history","useHistory","navModulesList","navId","label","formatMessage","id","defaultMessage","path","onClose","onToggle","onClick","push","onMouseDown","onTouchStart","className","icon","menuOutline","title","placement","closeIcon","closeOutline","bodyStyle","padding","display","flexDirection","map","isActiveMenuItem","startsWith","clsx","Header","useContext","AppContext","moduleHeader","AppPageContext","HeaderLayout","checked","onChange","axios","create","baseURL","process","Error","useModal","modal","body","useEffect","openErrorModalWithIcon","message","error","centered","content","requestInterceptor","interceptors","request","use","Promise","reject","responseInterceptor","response","status","statusText","data","eject","AuthLayout","children","appContainer","useRef","Provider","value","ref","AppPage","pageProps","UserOnline","Component","component","rest","render","props","AudiosCache","play","sound","timeout","playInternal","Object","keys","forEach","audio","currentTime","pause","Audio","undefined","clearTimeout","setTimeout","RippleLayer","state","animate","top","left","ripple","React","createRef","px","val","getStyles","getRepplingCls","reppling","cursorPos","$button","current","parentElement","buttonPos","getBoundingClientRect","buttonWidth","offsetWidth","buttonHeight","offsetHeight","rippleWidthShouldBe","Math","max","centerize","setState","prevProps","this","time","style","defaultProps","Ripple","handleClick","e","disabled","touches","clientY","clientX","Date","now","CardSetCache","GooeyButton","deviation","text","xmlns","version","in","stdDeviation","result","type","values","in2","operator","reactSwipeEl","interval","ForKids","autoplay","setAutoplay","currentSlide","setCurrentSlide","currentSet","setCurrentSet","next","setInterval","clearInterval","card","src","location","href","swipeOptions","continuous","startSlide","callback","index","el","prev","Crocodile","App","exact","to","localization","en","apps","Modules","forkids","crocodile","feedback","fruits","banana","strawberry","kiwi","peach","orange","pear","lemon","plum","apple","pineapple","cherry","pomegranate","vegetables","tomato","ru","SELECT_APPLICATION","initialState","currentApplication","reducer","action","types","payload","appReducers","combineReducers","filter","filterReducer","rootReducers","middlewares","thunk","store","createStore","composeWithDevTools","applyMiddleware","useSelector","ReactDOM","messages","locale","document","getElementById"],"mappings":"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","file":"static/js/main.10732f0a.chunk.js","sourcesContent":["// cache\r\nexport const AudiosCache: { [key: string]: HTMLAudioElement } = {};\r\n\r\nlet timeoutObject: NodeJS.Timer | undefined;\r\n\r\nexport const play = (sound: string, timeout?: number ) => {\r\n  if (!Object.keys(AudiosCache).includes(sound)) {\r\n    AudiosCache[sound] = new Audio(process.env.PUBLIC_URL + '/audio/' + sound + '.mp3');\r\n  }\r\n\r\n  if (timeout !== undefined && timeoutObject) {\r\n    clearTimeout(timeoutObject);\r\n  }\r\n\r\n  function playInternal() {\r\n    Object.keys(AudiosCache).forEach((audio) => {\r\n      if (AudiosCache[audio].currentTime > 0) {\r\n        AudiosCache[audio].pause();\r\n        AudiosCache[audio].currentTime = 0;\r\n      }\r\n    });\r\n    void AudiosCache[sound].play();\r\n  }\r\n\r\n  if (timeout) {\r\n    timeoutObject = setTimeout(() => {\r\n      playInternal();\r\n      timeoutObject = undefined;\r\n    }, timeout);\r\n  } else {\r\n    playInternal();\r\n  }\r\n\r\n};\r\n","import { createContext, Dispatch, SetStateAction } from 'react';\r\n\r\ninterface ThemeProps {\r\n  theme: 'light' | 'dark';\r\n  setTheme: Dispatch<SetStateAction<'light' | 'dark'>>\r\n}\r\n\r\nexport default createContext({\r\n  theme: 'light',\r\n  setTheme: (t) => t,\r\n} as ThemeProps);\r\n","import { isEqual, mergeWith, toLower, trim } from 'lodash';\r\n\r\nexport const isDev = (): boolean => !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\r\nexport const compareByParams = <T>(a: T, b: T, param: keyof T): number => (a[param] > b[param] ? 1 : -1);\r\nexport const compareByDate = (a: Date | string, b: Date | string): number => new Date(b).getTime() - new Date(a).getTime();\r\nexport const compareIgnoringCase = (a: string, b: string): number => (a.toLowerCase() > b.toLowerCase() ? 1 : -1);\r\n\r\nexport const deepCompareObj = <T extends CommonObj, U extends CommonObj>(oldObj: T, newObj: U): CommonObj => {\r\n  const updatedObj: CommonObj = {};\r\n  mergeWith(oldObj, newObj, (objectValue, sourceValue, key) => {\r\n    if (!(isEqual(objectValue, sourceValue)) && (Object(objectValue) !== objectValue)) {\r\n      updatedObj[key] = sourceValue;\r\n    }\r\n  });\r\n  return updatedObj;\r\n};\r\n\r\nexport const getFirstCharacterFromString = (val: string): string => val.charAt(0).toUpperCase();\r\n\r\nexport const normalizeStrForSearch = (val: string): string => trim((toLower(val)));\r\n\r\nexport const isTouchDevice = () => (('ontouchstart' in window)\r\n  || (navigator.maxTouchPoints > 0)\r\n  // @ts-ignore\r\n  || (navigator.msMaxTouchPoints > 0));\r\n\r\nexport const isTouch = isTouchDevice();\r\n\r\nexport const isMobile = window.screen.width < 768 || window.screen.height < 768;\r\nexport const isPortrait = () => window.orientation === 0;\r\n\r\nexport const isSafari = /Safari\\//.test(navigator.userAgent) && !/(Chrome\\/|Android\\s)/.test(navigator.userAgent);\r\nexport const isSafariMacintosh = isSafari && navigator.userAgent.includes('Macintosh');\r\nexport const isSafariIPhone = isSafari && navigator.userAgent.includes('iPhone');\r\n","import { FC, useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport { Drawer } from 'antd';\r\nimport { Icon } from '@iconify/react';\r\nimport closeOutline from '@iconify-icons/eva/close-outline';\r\nimport menuOutline from '@iconify-icons/eva/menu-outline';\r\nimport { isTouch } from '../../../common/utils/commonUtils';\r\n\r\nconst LeftMenu: FC = (): JSX.Element => {\r\n  const intl = useIntl();\r\n  const { pathname: curPath } = useLocation();\r\n  const [visible, setVisible] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const navModulesList: NavModulesList[] = [\r\n    {\r\n      navId: 0,\r\n      label: intl.formatMessage({ id: 'forkids', defaultMessage: 'For Kids' }),\r\n      path: '/forkids',\r\n    },\r\n    {\r\n      navId: 1,\r\n      label: intl.formatMessage({ id: 'crocodile', defaultMessage: 'Crocodile' }),\r\n      path: '/crocodile',\r\n    },\r\n  ];\r\n\r\n  const onClose = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const onToggle = () => {\r\n    setVisible(!visible);\r\n  };\r\n\r\n  const onClick = (path: string) => {\r\n    history.push(path);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div onMouseDown={isTouch ? () => {} : onToggle} onTouchStart={onToggle} className=\"menu-button cursor-pointer select-none\">\r\n        <Icon icon={menuOutline} width={32} height={32}/>\r\n      </div>\r\n      <Drawer\r\n        className=\"left-menu\"\r\n        title={(\r\n          <span\r\n            className=\"text-xl text-black font-bold\"\r\n          >\r\n            <FormattedMessage\r\n              id=\"Modules\"\r\n              defaultMessage=\"Modules\"\r\n            />\r\n            <sup> ©</sup>\r\n\r\n          </span>\r\n        )}\r\n        placement=\"left\"\r\n        onClose={onClose}\r\n        visible={visible}\r\n        closeIcon={<Icon icon={closeOutline} width={22} height={22}/>}\r\n        bodyStyle={{\r\n          padding: 0,\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n        }}\r\n        width={320}\r\n      >\r\n        {\r\n          navModulesList.map(({ navId, label, path }) => {\r\n            const isActiveMenuItem = curPath.startsWith(path) || (curPath === '/' && navId === 0);\r\n            return (\r\n              <div key={navId} className=\"cursor-pointer\">\r\n                <div className={clsx('text-base menu-item', isActiveMenuItem && 'active')}\r\n                     onMouseDown={isTouch ? () => {} : () => onClick(path)}\r\n                     onTouchStart={() => onClick(path)}\r\n                >\r\n                  {label}\r\n                </div>\r\n              </div>\r\n            );\r\n          })\r\n        }\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LeftMenu;\r\n","import { createContext } from 'react';\r\n\r\nexport default createContext({\r\n  title: '',\r\n});\r\n","import { FC, useContext } from 'react';\r\nimport clsx from 'clsx';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { Layout, Switch } from 'antd';\r\nimport LeftMenu from 'components/common/LeftMenu';\r\nimport AppContext from 'common/AppContext';\r\nimport AppPageContext from 'components/common/AppPageContext';\r\n\r\nconst Header: FC = (): JSX.Element => {\r\n  const { theme, setTheme } = useContext(AppContext);\r\n  const { title: moduleHeader } = useContext(AppPageContext);\r\n\r\n  const { Header: HeaderLayout } = Layout;\r\n\r\n  const change = () => {\r\n    setTheme((t: 'light' | 'dark'): 'light' | 'dark' => (t === 'light' ? 'dark' : 'light'));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HeaderLayout className=\"shadow-lg flex items-center\">\r\n        {<LeftMenu/>}\r\n        <div className={clsx('flex flex-col pt-10 pb-10')}>\r\n            <span className={clsx('text-sm')}>\r\n              <FormattedMessage\r\n                id=\"apps\"\r\n                defaultMessage=\"🌈 Rainbow apps\"\r\n              />\r\n            </span>\r\n          <span className=\"text-lg font-bold leading-10\">{moduleHeader}</span>\r\n        </div>\r\n        <div className=\"flex items-center hidden\">\r\n            <span\r\n              className={clsx('pr-14 t text-white opacity-75 hover:opacity-100',\r\n                'cursor-pointer transition duration-300 font-light')}\r\n            >\r\n              Dark theme\r\n            </span>\r\n          <Switch checked={theme === 'dark'} onChange={change}/>\r\n        </div>\r\n      </HeaderLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({ baseURL: `${process.env.PUBLIC_URL}` });\r\n","import { FC, useEffect } from 'react';\r\nimport axios from 'common/axios';\r\nimport { Modal } from 'antd';\r\nimport {\r\n  AxiosError, AxiosResponse, AxiosRequestConfig,\r\n} from 'axios';\r\nimport { ModalFuncProps } from 'antd/lib/modal/Modal';\r\n\r\nconst Error: FC = (): JSX.Element => {\r\n  const [modal, body] = Modal.useModal();\r\n\r\n  useEffect(() => {\r\n    const config = (content: string): ModalFuncProps => ({\r\n      title: 'Error',\r\n      centered: true,\r\n      content,\r\n    });\r\n\r\n    const openErrorModalWithIcon = (message: string) => {\r\n      modal.error(config(message));\r\n    };\r\n\r\n    const requestInterceptor = axios.interceptors.request.use(\r\n      (request: AxiosRequestConfig): AxiosRequestConfig => request,\r\n      (error: AxiosError): Promise<AxiosError> => Promise.reject(error),\r\n    );\r\n\r\n    const responseInterceptor = axios.interceptors.response.use(\r\n      (response: AxiosResponse): AxiosResponse => response,\r\n      (error: AxiosError): Promise<AxiosError> => {\r\n        if (error.response) {\r\n          const { status, statusText, data } = error.response;\r\n\r\n          if (status >= 500) {\r\n            if (typeof data === 'string') {\r\n              openErrorModalWithIcon(data);\r\n            } else {\r\n              openErrorModalWithIcon(`Invalid HTTP response status ${status} (${statusText})`);\r\n            }\r\n          }\r\n        }\r\n\r\n        return Promise.reject(error);\r\n      },\r\n    );\r\n\r\n    return () => {\r\n      axios.interceptors.request.eject(requestInterceptor);\r\n      axios.interceptors.response.eject(responseInterceptor);\r\n    };\r\n  }, [modal]);\r\n\r\n  return body;\r\n};\r\n\r\nexport default Error;\r\n","import { FC, useRef, useState } from 'react';\r\nimport AppContext from 'common/AppContext';\r\nimport Header from 'components/common/Header';\r\nimport Error from 'components/common/Error';\r\n\r\nconst AuthLayout: FC = ({ children }): JSX.Element => {\r\n  const [theme, setTheme] = useState<'light' | 'dark'>('light');\r\n  const appContainer = useRef<HTMLDivElement | null>(null);\r\n\r\n  return (\r\n    <AppContext.Provider value={{ theme, setTheme }}>\r\n      <div className={`theme-${theme} absolute inset-0 overflow-hidden`} ref={appContainer}>\r\n        <div className=\"absolute inset-0 overflow-hidden flex flex-col bg-ivory transition duration-300\">\r\n          <Header/>\r\n\r\n          {children}\r\n\r\n          <Error/>\r\n        </div>\r\n      </div>\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthLayout;\r\n","import { FC } from 'react';\r\nimport AuthLayout from 'components/common/AuthLayout';\r\nimport AppPageContext from 'components/common/AppPageContext';\r\n\r\nexport interface Props {\r\n  pageProps?: PageProps;\r\n}\r\n\r\nconst AppPage: FC<Props> = ({ pageProps = { title: '' }, children }): JSX.Element | null => (\r\n  <AppPageContext.Provider value={pageProps}>\r\n    <AuthLayout>\r\n      {children}\r\n    </AuthLayout>\r\n  </AppPageContext.Provider>\r\n);\r\n\r\nexport default AppPage;\r\n","import { FC } from 'react';\r\nimport { Route, RouteProps } from 'react-router-dom';\r\nimport AppPage from 'components/common/AppPage';\r\n\r\ninterface Props extends RouteProps {\r\n  pageProps?: PageProps\r\n}\r\n\r\nconst UserOnline: FC<Props> = ({\r\n  component: Component, children, pageProps, ...rest\r\n}) => {\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        <AppPage pageProps={pageProps}>\r\n          {Component ? <Component {...props} /> : children}\r\n        </AppPage>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default UserOnline;\r\n","/* eslint-disable */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './RippleLayer.css';\r\n\r\nclass RippleLayer extends React.Component {\r\n  static propTypes = {\r\n    cursorPos: PropTypes.shape({\r\n      top: PropTypes.number,\r\n      left: PropTypes.number,\r\n      time: PropTypes.number,\r\n    }),\r\n  };\r\n\r\n  static defaultProps = {\r\n    cursorPos: {},\r\n  };\r\n\r\n  state = {\r\n    animate: false,\r\n    width: 0,\r\n    height: 0,\r\n    top: 0,\r\n    left: 0,\r\n  };\r\n\r\n  ripple = React.createRef();\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const cursorPos = this.props.cursorPos;\r\n\r\n    // Prevent Component duplicates do ripple effect at the same time\r\n    if (cursorPos.time !== prevProps.cursorPos.time) {\r\n      // If Has Animated, set state to \"false\" First\r\n      if (!this.state.animate) {\r\n        this.reppling(cursorPos);\r\n        return;\r\n      }\r\n\r\n      // do rippling\r\n      this.setState({ animate: false }, () => this.reppling(cursorPos));\r\n    }\r\n  }\r\n\r\n  px = val => `${val}px`;\r\n\r\n  getStyles = () => {\r\n    const { top, left, width, height } = this.state;\r\n\r\n    return {\r\n      top: this.px(top),\r\n      left: this.px(left),\r\n      width: this.px(width),\r\n      height: this.px(height),\r\n    };\r\n  };\r\n\r\n  getRepplingCls = () => {\r\n    return this.state.animate ? 'is-reppling' : '';\r\n  };\r\n\r\n  reppling = cursorPos => {\r\n    // Get the element\r\n    const $ripple = this.ripple.current;\r\n    const $button = $ripple.parentElement;\r\n\r\n    const buttonPos = $button.getBoundingClientRect();\r\n\r\n    const buttonWidth = $button.offsetWidth;\r\n    const buttonHeight = $button.offsetHeight;\r\n\r\n    // Make a Square Ripple\r\n    const rippleWidthShouldBe = Math.max(buttonHeight, buttonWidth);\r\n\r\n    // Make Ripple Position to be center\r\n    const centerize = rippleWidthShouldBe / 2;\r\n\r\n    this.setState({\r\n      animate: true,\r\n      width: rippleWidthShouldBe,\r\n      height: rippleWidthShouldBe,\r\n      top: cursorPos.top - buttonPos.top - centerize,\r\n      left: cursorPos.left - buttonPos.left - centerize,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return <div\r\n      className={`Ripple ${this.getRepplingCls()}`}\r\n      ref={this.ripple}\r\n      style={this.getStyles()}/>;\r\n  }\r\n}\r\n\r\nexport default RippleLayer;\r\n","/* eslint-disable */\r\nimport React, { Component } from 'react';\r\nimport RippleLayer from './RippleLayer';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nclass Ripple extends Component {\r\n  static propTypes = {\r\n    ExtComponent: PropTypes.node,\r\n    className: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    disabled: false,\r\n  };\r\n\r\n  state = {\r\n    cursorPos: {},\r\n  };\r\n\r\n  handleClick = e => {\r\n    if (!this.props.disabled && e.touches) {\r\n      const cursorPos = {\r\n        top: e.touches[0].clientY,\r\n        left: e.touches[0].clientX,\r\n        time: Date.now(),\r\n      };\r\n\r\n      this.setState({ cursorPos });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { children, className } = this.props;\r\n\r\n    return (\r\n      <div\r\n        {...this.props}\r\n        className={clsx('relative overflow-hidden flex-1 flex', className)}\r\n        onTouchStart={this.handleClick}\r\n      >\r\n        {children}\r\n        <RippleLayer cursorPos={this.state.cursorPos}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Ripple;\r\n","export const CardSetCache: { [key: string]: string[] } = {\r\n  'fruits': [\r\n    'banana',\r\n    'strawberry',\r\n    'kiwi',\r\n    'peach',\r\n    'orange',\r\n    'pear',\r\n    'lemon',\r\n    'plum',\r\n    'apple',\r\n    'pineapple',\r\n    'cherry',\r\n    'pomegranate',\r\n  ], /*,\r\n  'vegetables': [\r\n    'tomato',\r\n  ],*/\r\n};\r\n\r\n","import { FC } from 'react';\r\nimport './GooeyButton.scss';\r\nimport { isTouch } from '../utils/commonUtils';\r\n\r\nexport interface GooeyButtonProps {\r\n  onClick: () => void;\r\n  deviation?: number;\r\n  text: string;\r\n}\r\n\r\nconst GooeyButton: FC<GooeyButtonProps> = ({ onClick, deviation, text }): JSX.Element => {\r\n  return (\r\n    <div className='gooey-button-wrapper'>\r\n      <svg id=\"gooey-button-svg-filter-blur\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\r\n        <defs>\r\n          <filter id=\"gooey\">\r\n            <feGaussianBlur in=\"SourceGraphic\" stdDeviation={deviation} result=\"blur\"/>\r\n            <feColorMatrix in=\"blur\" type=\"matrix\" values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 19 -9\"\r\n                           result=\"highContrastGraphic\"/>\r\n            <feComposite in=\"SourceGraphic\" in2=\"highContrastGraphic\" operator=\"atop\"/>\r\n          </filter>\r\n        </defs>\r\n      </svg>\r\n\r\n      <button className=\"gooey-button\"\r\n              onMouseDown={isTouch ? () => {\r\n              } : onClick}\r\n              onTouchStart={onClick}>\r\n        {text}\r\n        <span className=\"bubbles\">\r\n                <span className=\"bubble\"/>\r\n                <span className=\"bubble\"/>\r\n                <span className=\"bubble\"/>\r\n                <span className=\"bubble\"/>\r\n                <span className=\"bubble\"/>\r\n                <span className=\"bubble\"/>\r\n                <span className=\"bubble\"/>\r\n                <span className=\"bubble\"/>\r\n                <span className=\"bubble\"/>\r\n                <span className=\"bubble\"/>\r\n              </span>\r\n      </button>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nGooeyButton.defaultProps = {\r\n  deviation: 6,\r\n};\r\n\r\nexport default GooeyButton;\r\n","import { FC, useEffect, useState } from 'react';\r\nimport ReactSwipe from 'react-swipe';\r\n\r\nimport './ForKids.scss';\r\nimport { useIntl } from 'react-intl';\r\nimport { Icon } from '@iconify/react';\r\nimport { play } from './common/AudiosCache';\r\nimport Ripple from '../../../common/ripple/Ripple';\r\nimport { isTouch } from '../../../common/utils/commonUtils';\r\nimport { CardSetCache } from './common/CardSets';\r\nimport GooeyButton from '../../../common/GooeyButton/GooeyButton';\r\n\r\nlet reactSwipeEl: ReactSwipe;\r\nlet interval: NodeJS.Timer | undefined;\r\n\r\nconst ForKids: FC = (): JSX.Element => {\r\n\r\n  const intl = useIntl();\r\n\r\n  const [autoplay, setAutoplay] = useState<boolean>(true);\r\n  const [currentSlide, setCurrentSlide] = useState<number>(0);\r\n  const [currentSet, setCurrentSet] = useState<string | undefined>(undefined);\r\n\r\n  const sendEmail = () => {\r\n    window.location.href = 'mailto:dimakoch@ukr.net?subject=ForKids application';\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentSet !== undefined) {\r\n      if (autoplay) {\r\n        setTimeout(() => {\r\n          reactSwipeEl.next();\r\n        }, 1000);\r\n        interval = setInterval(() => {\r\n          reactSwipeEl.next();\r\n        }, 3000);\r\n      } else {\r\n        if (interval !== undefined) {\r\n          clearInterval(interval);\r\n          interval = undefined;\r\n        }\r\n      }\r\n\r\n      return () => {\r\n        if (interval !== undefined) {\r\n          clearInterval(interval);\r\n          interval = undefined;\r\n        }\r\n      };\r\n    } else {\r\n      if (interval !== undefined) {\r\n        clearInterval(interval);\r\n        interval = undefined;\r\n      }\r\n    }\r\n  }, [autoplay, currentSet]);\r\n\r\n  return (\r\n    <div className='p-10'>\r\n      {currentSet === undefined && <div className={'flex flex-row flex-flow'}>\r\n        {Object.keys(CardSetCache).map((card) => {\r\n          return <div key={card}\r\n                      className={'flex flex-col card'}\r\n                      onMouseDown={\r\n                        isTouch ? () => {\r\n                        } : () => {\r\n                          setCurrentSet(card);\r\n                        }}\r\n                      onTouchStart={() => {\r\n                        setCurrentSet(card);\r\n                      }}>\r\n            <div className={'card-image'}>\r\n              <img className={'image'}\r\n                   src={process.env.PUBLIC_URL + '/images/' + card + '/' + CardSetCache[card][0] + '.jpg'}/>\r\n            </div>\r\n            <div className={'card-name p-10 flex justify-center'}>{intl.formatMessage({ id: card })}</div>\r\n          </div>;\r\n        })}\r\n\r\n        <div className={'absolute bottom-0 right-0'}>\r\n          <GooeyButton onClick={sendEmail} text={intl.formatMessage({ id: 'feedback' })}/>\r\n        </div>\r\n      </div>}\r\n      {currentSet !== undefined && <>\r\n        <ReactSwipe\r\n          className={'carousel'}\r\n          swipeOptions={{\r\n            continuous: true, startSlide: currentSlide, callback: (index: number) => {\r\n              setCurrentSlide(index);\r\n              play(currentSet + '/' + CardSetCache[currentSet][index], 200);\r\n            },\r\n          }}\r\n          ref={(el: ReactSwipe) => {\r\n            reactSwipeEl = el;\r\n          }}\r\n        >\r\n          {CardSetCache[currentSet].map((card: string) => {\r\n            return (<div key={card}\r\n                         onMouseDown={\r\n                           isTouch ? () => {\r\n                           } : () => {\r\n                             setAutoplay(false);\r\n                           }}\r\n                         onTouchStart={() => {\r\n                           setAutoplay(false);\r\n                         }}>\r\n              <div className={'item flex flex-col'}>\r\n                <div className={'description'}>\r\n                  {intl.formatMessage({ id: card })}\r\n                </div>\r\n                <img className={'image'} src={process.env.PUBLIC_URL + '/images/' + currentSet + '/' + card + '.jpg'}/>\r\n              </div>\r\n            </div>);\r\n          })}\r\n        </ReactSwipe>\r\n        <div className={'carousel-buttons flex flex-row justify-between'}>\r\n          <div className={'carousel-button'}\r\n               onMouseDown={\r\n                 isTouch ? () => {\r\n                 } : () => {\r\n                   setAutoplay(false);\r\n                   reactSwipeEl.prev();\r\n                   play('click/click');\r\n                 }}\r\n               onTouchStart={() => {\r\n                 setAutoplay(false);\r\n                 reactSwipeEl.prev();\r\n                 play('click/click');\r\n               }\r\n               }>\r\n            <Ripple className='carousel-button-ripple'>\r\n              <Icon icon=\"clarity:rewind-solid\" className={'icon'}/>\r\n            </Ripple>\r\n          </div>\r\n\r\n          <div className={'carousel-button'}\r\n               onMouseDown={\r\n                 isTouch ? () => {\r\n                 } : () => {\r\n                   setAutoplay(!autoplay);\r\n                   play('click/click');\r\n                 }}\r\n               onTouchStart={() => {\r\n                 setAutoplay(!autoplay);\r\n                 play('click/click');\r\n               }}>\r\n            <Ripple className='carousel-button-ripple'>\r\n              {autoplay ?\r\n                <Icon icon=\"clarity:pause-solid\" className={'icon'}/>\r\n                : <Icon icon=\"clarity:play-solid\" className={'icon'}/>\r\n              }\r\n            </Ripple>\r\n          </div>\r\n\r\n          <div className={'carousel-button'}\r\n               onMouseDown={\r\n                 isTouch ? () => {\r\n                 } : () => {\r\n                   setAutoplay(false);\r\n                   reactSwipeEl.next();\r\n                   play('click/click');\r\n                 }}\r\n               onTouchStart={() => {\r\n                 setAutoplay(false);\r\n                 reactSwipeEl.next();\r\n                 play('click/click');\r\n               }}>\r\n            <Ripple className='carousel-button-ripple'>\r\n              <Icon icon=\"clarity:fast-forward-solid\" className={'icon'}/>\r\n            </Ripple>\r\n          </div>\r\n\r\n        </div>\r\n      </>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForKids;\r\n","import { FC } from 'react';\r\n\r\nimport './Crocodile.scss';\r\n\r\nconst Crocodile: FC = (): JSX.Element => {\r\n\r\n  return (\r\n    <div className={'p-20'}>\r\n      Crocodile\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Crocodile;\r\n","import { FC } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport UserOnline from './routes/Private/UserOnline';\r\nimport ForKids from './Dashboard/ForKids/ForKids';\r\nimport Crocodile from './Dashboard/Crocodile/Crocodile';\r\nimport { useIntl } from 'react-intl';\r\n\r\nconst App: FC = (): JSX.Element => {\r\n  const intl = useIntl();\r\n\r\n  return (\r\n        <Switch>\r\n            <UserOnline exact path=\"/\">\r\n                <Redirect to=\"/forkids\"/>\r\n            </UserOnline>\r\n            <UserOnline path=\"/forkids\" component={ForKids}\r\n                        pageProps={{ title: intl.formatMessage({ id: 'forkids', defaultMessage: 'For Kids' }) }}/>\r\n            <UserOnline path=\"/crocodile\" component={Crocodile}\r\n                        pageProps={{ title: intl.formatMessage({ id: 'crocodile', defaultMessage: 'Crocodile' }) }}/>\r\n\r\n            {/*MUST BE THE LAST ROUTE*/}\r\n            <Route exact path=\"*\">\r\n                <Redirect to=\"/forkids\"/>\r\n            </Route>\r\n        </Switch>\r\n  );\r\n};\r\nexport default App;\r\n","import enLang from './lang/en';\nimport ruLang from './lang/ru';\n\nconst localization = {\n  en: enLang,\n  ru: ruLang,\n};\n\nexport default localization;\n","const en = {\n  apps:      '🌈 Rainbow apps',\n  Modules:   'Modules',\n  forkids:   'For Kids',\n  crocodile: 'Crocodile',\n  feedback:  'Feedback',\n\n  fruits:      'Fruits',\n  banana:      'Banana',\n  strawberry:  'Strawberry',\n  kiwi:        'Kiwi',\n  peach:       'Peach',\n  orange:      'Orange',\n  pear:        'Pear',\n  lemon:       'Lemon',\n  plum:        'Plum',\n  apple:       'Apple',\n  pineapple:   'Pineapple',\n  cherry:      'Cherry',\n  pomegranate: 'Pomegranate',\n\n  vegetables: 'Vegetables',\n  tomato:     'Tomato',\n};\n\nexport default en;\n","const en = {\n  apps:      '🌈 Радужные программы',\n  Modules:   'Программы',\n  forkids:   'Для детей',\n  crocodile: 'Крокодил',\n  feedback:  'Отзыв',\n\n  fruits:      'Фрукты',\n  banana:      'БАНАН',\n  strawberry:  'КЛУБНИКА',\n  kiwi:        'КИВИ',\n  peach:       'ПЕРСИК',\n  orange:      'АПЕЛЬСИН',\n  pear:        'ГРУША',\n  lemon:       'ЛИМОН',\n  plum:        'СЛИВА',\n  apple:       'ЯБЛОКО',\n  pineapple:   'АНАНАС',\n  cherry:      'ВИШНЯ',\n  pomegranate: 'ГРАНАТ',\n\n  vegetables: 'Овощи',\n  tomato:     'ПОМИДОР',\n};\n\nexport default en;\n","export const SELECT_APPLICATION = 'root/SELECT_APPLICATION';\r\n","import * as types from 'state/filter/actionTypes';\r\nimport { ActionsTypes } from 'state/filter/actions';\r\n\r\nexport interface FilterState {\r\n  currentApplication: string | undefined;\r\n}\r\n\r\nconst initialState: FilterState = {\r\n  currentApplication: undefined,\r\n};\r\n\r\nconst reducer = (state = initialState, action: ActionsTypes): FilterState => {\r\n  switch (action.type) {\r\n    case types.SELECT_APPLICATION:\r\n      return { ...state, currentApplication: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport filterReducer from '../filter/reducer';\r\nimport { SelectApplication } from '../filter/actions';\r\n\r\n\r\nconst appReducers = combineReducers({\r\n  filter: filterReducer,\r\n});\r\n\r\nconst rootReducers = (state: ReturnType<typeof appReducers> | undefined, action: SelectApplication) => {\r\n  return appReducers(state, action);\r\n};\r\n\r\nexport default rootReducers;\r\n","import { createStore, applyMiddleware, Middleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducers from 'state/rootReducers';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\n\r\nconst middlewares: Middleware[] = [thunk];\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  // Logger for Redux\r\n  // const { createLogger } = require('redux-logger');\r\n  // const logger: Middleware = createLogger({ collapsed: true });\r\n  // middleware.push(logger);\r\n}\r\n\r\nconst store = createStore(rootReducers, composeWithDevTools(applyMiddleware(...middlewares)));\r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\nexport type AppDispatch = typeof store.dispatch;\r\n/** Application specific strongly typed wrapper around redux's useSelector() and useDispatch() */\r\nexport const useAppDispatch = () => useDispatch<any>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n\r\nexport default store;\r\n","import ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { IntlProvider } from 'react-intl';\r\nimport App from 'components/App';\r\nimport localization from 'common/localization';\r\nimport store from 'common/store';\r\n\r\nimport 'styles/main.scss';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <IntlProvider messages={localization.ru} locale=\"ru\">\r\n      {/*use HashRouter for GutHub Pages routing works only for exact match for url, any subdomains will result in 404*/}\r\n      <HashRouter>\r\n        <App/>\r\n      </HashRouter>\r\n    </IntlProvider>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}